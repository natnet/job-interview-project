version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  producer:
    build:
      context: producer/
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - consumer
      - mongodb
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TOPIC_NAME: EVENTS
    volumes:
      - ./producer/config:/config
    networks:
      - kafka-network

  consumer:
    build:
      context: consumer/
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - mongodb
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TOPIC_NAME: EVENTS
      MONGO_LINK: "mongodb://mongodb:27017/"
      MONGO_DB_NAME: "test"
      MONGO_COLLECTION_NAME: "events"
      GROUP_ID: "NATAN_GROUP"

    networks:
      - kafka-network

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    networks:
      - kafka-network
    volumes:
      - mongodb-data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - kafka-network
    volumes:
      - redis-data:/data

  mongotoredis:
    build:
      context: mongoToRedis/
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - mongodb
      - consumer
    environment:
      REDIS_PORT: 6379
      MONGO_LINK: "mongodb://mongodb:27017/"
      MONGO_DB_NAME: "test"
      MONGO_COLLECTION_NAME: "events"
    networks:
      - kafka-network
    volumes:
      - ./mongoToRedis/config:/config

volumes:
  redis-data:
  mongodb-data:

networks:
  kafka-network:
